@model SportSchoolApplication.Models.Record

@{
    ViewBag.Title = "Рекорды";
    var cl = ViewBag.CategoryList;
    var sexes = ViewBag.SexList;
}

<h2>Рекорды</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Редактировать</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.FIO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FIO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FIO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Пол</label>
        <div class="col-md-10">
            <select class="form-control" id="SexId" name="SexId">
                <option value="@Model.SexId">@Model.Sex.Name</option>
                @foreach (var item in sexes)
                {
                    if (item.Id != Model.SexId)
                    {<option value="@item.Id" data-SexId="@item.Id">@item.Name</option>}
                }
            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="cat">
        <label class="control-label col-md-2">Категория</label>
        <div class="col-md-10">
            <select class="form-control" id="CategoryId" name="CategoryId">
                <option value="@Model.CategoryId" id="DefaultId">@Model.Category.Weight</option>
                @foreach (var item in cl)
                {
                    if((item.IsMan ? 1 : 2) == Model.SexId && item.Id != Model.CategoryId)
                    {<option value="@item.Id">@item.Weight</option>}
                    <option value="@item.Id" data-isMan="@(item.IsMan ? 1 : 2)" class="d-none">@item.Weight</option>
                }
            </select>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Result, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abbreviation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Abbreviation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Abbreviation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeId, "Вид", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $('#SexId').re
    $('#SexId').on("change", function () {
        $('#DefaultId option').addClass('d-none');
        $('#CategoryId option').addClass('d-none');
        $(`#CategoryId option[data-isMan="${$(this).val()}"]`).removeClass('d-none');
    });
</script>